C51 COMPILER V9.60.7.0   LCD1602                                                           04/22/2025 16:00:00 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: D:\3software\keil\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE INCDIR(D:\3software\keil\C51\I
                    -NC\Atmel) DEBUG OBJECTEXTEND PRINT(.\Listings\LCD1602.lst) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include "lcd1602.h"
   2          #include <stdio.h>
   3          // #include<>
   4          /*******************************************************************************
   5           * 函 数 名       : lcd1602_write_cmd
   6           * 函数功能          : LCD1602写命令
   7           * 输    入       : cmd：指令
   8           * 输    出            : 无
   9           *******************************************************************************/
  10          #if (LCD1602_4OR8_DATA_INTERFACE == 0) // 8位LCD
  11          void lcd1602_write_cmd(u8 cmd)
  12          {
  13   1          LCD1602_RS = 0; // 选择命令
  14   1          LCD1602_RW = 0; // 选择写
  15   1          LCD1602_E = 0;
  16   1          LCD1602_DATAPORT = cmd; // 准备命令
  17   1          delay_ms(1);
  18   1          LCD1602_E = 1; // 使能脚E先上升沿写入
  19   1          delay_ms(1);
  20   1          LCD1602_E = 0; // 使能脚E后负跳变完成写入
  21   1      }
  22          #else // 4位LCD
              void lcd1602_write_cmd(u8 cmd)
              {
                  LCD1602_RS = 0; // 选择命令
                  LCD1602_RW = 0; // 选择写
                  LCD1602_E = 0;
                  LCD1602_DATAPORT = cmd; // 准备命令
                  delay_ms(1);
                  LCD1602_E = 1; // 使能脚E先上升沿写入
                  delay_ms(1);
                  LCD1602_E = 0; // 使能脚E后负跳变完成写入
              
                  LCD1602_DATAPORT = cmd << 4; // 准备命令
                  delay_ms(1);
                  LCD1602_E = 1; // 使能脚E先上升沿写入
                  delay_ms(1);
                  LCD1602_E = 0; // 使能脚E后负跳变完成写入
              }
              #endif
  41          
  42          /*******************************************************************************
  43           * 函 数 名       : lcd1602_write_data
  44           * 函数功能          : LCD1602写数据
  45           * 输    入       : dat：数据
  46           * 输    出            : 无
  47           *******************************************************************************/
  48          #if (LCD1602_4OR8_DATA_INTERFACE == 0) // 8位LCD
  49          void lcd1602_write_data(u8 dat)
  50          {
  51   1          LCD1602_RS = 1; // 选择数据
  52   1          LCD1602_RW = 0; // 选择写
  53   1          LCD1602_E = 0;
  54   1          LCD1602_DATAPORT = dat; // 准备数据
C51 COMPILER V9.60.7.0   LCD1602                                                           04/22/2025 16:00:00 PAGE 2   

  55   1          delay_ms(1);
  56   1          LCD1602_E = 1; // 使能脚E先上升沿写入
  57   1          delay_ms(1);
  58   1          LCD1602_E = 0; // 使能脚E后负跳变完成写入
  59   1      }
  60          #else
              void lcd1602_write_data(u8 dat)
              {
                  LCD1602_RS = 1; // 选择数据
                  LCD1602_RW = 0; // 选择写
                  LCD1602_E = 0;
                  LCD1602_DATAPORT = dat; // 准备数据
                  delay_ms(1);
                  LCD1602_E = 1; // 使能脚E先上升沿写入
                  delay_ms(1);
                  LCD1602_E = 0; // 使能脚E后负跳变完成写入
              
                  LCD1602_DATAPORT = dat << 4; // 准备数据
                  delay_ms(1);
                  LCD1602_E = 1; // 使能脚E先上升沿写入
                  delay_ms(1);
                  LCD1602_E = 0; // 使能脚E后负跳变完成写入
              }
              #endif
  79          
  80          /*******************************************************************************
  81           * 函 数 名       : lcd1602_init
  82           * 函数功能          : LCD1602初始化
  83           * 输    入       : 无
  84           * 输    出            : 无
  85           *******************************************************************************/
  86          #if (LCD1602_4OR8_DATA_INTERFACE == 0) // 8位LCD
  87          void lcd1602_init(void)
  88          {
  89   1          lcd1602_write_cmd(0x38); // 数据总线8位，显示2行，5*7点阵/字符
  90   1          lcd1602_write_cmd(0x0c); // 显示功能开，无光标，光标闪烁
  91   1          lcd1602_write_cmd(0x06); // 写入新数据后光标右移，显示屏不移动
  92   1          lcd1602_write_cmd(0x01); // 清屏
  93   1      }
  94          #else
              void lcd1602_init(void)
              {
                  lcd1602_write_cmd(0x28); // 数据总线4位，显示2行，5*7点阵/字符
                  lcd1602_write_cmd(0x0c); // 显示功能开，无光标，光标闪烁
                  lcd1602_write_cmd(0x06); // 写入新数据后光标右移，显示屏不移动
                  lcd1602_write_cmd(0x01); // 清屏
              }
              #endif
 103          
 104          /*******************************************************************************
 105           * 函 数 名       : lcd1602_clear
 106           * 函数功能          : LCD1602清屏
 107           * 输    入       : 无
 108           * 输    出            : 无
 109           *******************************************************************************/
 110          void lcd1602_clear(void)
 111          {
 112   1          lcd1602_write_cmd(0x01);
 113   1      }
 114          
 115          /*******************************************************************************
 116          * 函 数 名       : lcd1602_show_string
C51 COMPILER V9.60.7.0   LCD1602                                                           04/22/2025 16:00:00 PAGE 3   

 117          * 函数功能           : LCD1602显示字符
 118          * 输    入       : x,y：显示坐标，x=0~15，y=0~1;
 119                             str：显示字符串
 120          * 输    出             : 无
 121          *******************************************************************************/
 122          void lcd1602_show_string(u8 x, u8 y, u8 *str)
 123          {
 124   1          u8 i = 0;
 125   1      
 126   1          if (y > 1 | x > 15)
 127   1              return; // 行列参数不对则强制退出
 128   1      
 129   1          if (y < 1) // 第1行显示
 130   1          {
 131   2              while (*str != '\0') // 字符串是以'\0'结尾，只要前面有内容就显示
 132   2              {
 133   3                  if (i < 16 - x) // 如果字符长度超过第一行显示范围，则在第二行继续显示
 134   3                  {
 135   4                      lcd1602_write_cmd(0x80 + i + x); // 第一行显示地址设置
 136   4                  }
 137   3                  else
 138   3                  {
 139   4                      lcd1602_write_cmd(0x40 + 0x80 + i + x - 16); // 第二行显示地址设置
 140   4                  }
 141   3                  lcd1602_write_data(*str); // 显示内容
 142   3                  str++;                    // 指针递增
 143   3                  i++;
 144   3              }
 145   2          }
 146   1          else // 第2行显示
 147   1          {
 148   2              while (*str != '\0')
 149   2              {
 150   3                  if (i < 16 - x) // 如果字符长度超过第二行显示范围，则在第一行继续显示
 151   3                  {
 152   4                      lcd1602_write_cmd(0x80 + 0x40 + i + x);
 153   4                  }
 154   3                  else
 155   3                  {
 156   4                      lcd1602_write_cmd(0x80 + i + x - 16);
 157   4                  }
 158   3                  lcd1602_write_data(*str);
 159   3                  str++;
 160   3                  i++;
 161   3              }
 162   2          }
 163   1      }
 164          
 165          /*******************************************************************************
 166           * 函 数 名       : lcd1602_num_2_str
 167           * 函数功能          : 将二位数字转化为字符串并显示在LCD1602上
 168           * 输    入       : 数字
 169           * 输    出            : 要显示的字符串
 170           *******************************************************************************/
 171          unsigned char *lcd1602_num_2_str(unsigned char num)
 172          {
 173   1          static unsigned char key_str[3]; // 用于存储单个字符的字符串,注意最后是'\0'
 174   1          if (num >= 10)
 175   1          {
 176   2              key_str[0] = 1 + '0';
 177   2              key_str[1] = num - 10 + '0';
 178   2          }
C51 COMPILER V9.60.7.0   LCD1602                                                           04/22/2025 16:00:00 PAGE 4   

 179   1          else
 180   1          {
 181   2              key_str[0] = 0 + '0';
 182   2              key_str[1] = num + '0';
 183   2          }
 184   1          key_str[2] = '\0'; // 字符结束标记
 185   1          return key_str;
 186   1      }
 187          
 188          unsigned char *lcd1602_num_2_str_0_9(unsigned char num)
 189          {
 190   1          static unsigned char key_str[2]; // 用于存储单个字符的字符串,注意最后是'\0'
 191   1          key_str[0] = num + '0';
 192   1          key_str[1] = '\0'; // 字符结束标记
 193   1          return key_str;
 194   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    297    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
